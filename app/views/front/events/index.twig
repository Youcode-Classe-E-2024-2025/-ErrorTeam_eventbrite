{% extends 'base.twig' %}

{% block title %}Liste des événements{% endblock %}

{% block content %}
    <!-- Search and Filter Section -->
    <div class="flex flex-col md:flex-row justify-between items-center mb-6 ">
        <!-- Search Form -->
        <form action="/events" method="GET" class="mb-4 md:mb-0 bg-dima-blue">
            <div class="flex">
                <input type="text" name="search" placeholder="Rechercher un événement" value="{{ searchQuery|escape }}" class="px-4 py-2 rounded-l-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500">
                <button type="submit" class="bg-green-500 text-white px-4 py-2 rounded-r-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500">
                    <i class="fas fa-search"></i> Rechercher
                </button>
            </div>
        </form>

        <!-- Category Filter Form -->
        <form action="/events" method="GET">
            <select name="category" class="px-4 py-2 bg-dima-blue rounded-md border border-green-300 focus:outline-none focus:ring-2 focus:ring-green-500" onchange="this.form.submit()">
                <option value="" class="">Toutes les catégories</option>
                {% for category in categories %}
                    <option value="{{ category.getId() }}" {% if categoryId == category.getId() %}selected{% endif %}>
                        {{ category.getName() }}
                    </option>
                {% endfor %}
            </select>
        </form>
    </div>

    <!-- Include the event list partial -->
    {% include 'front/events/_event_list.twig' with {
        events: events,
        totalPages: totalPages,
        currentPage: currentPage
    } %}

    {% block scripts %}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            document.addEventListener('click', function(event) {
                if (event.target.classList.contains('pagination-link')) {
                    event.preventDefault();

                    const page = event.target.dataset.page;
                    loadEvents(page);
                }
            });

            function loadEvents(page) {
                const xhr = new XMLHttpRequest();
                const url = `/events?page=${page}{% if searchQuery %}&search={{ searchQuery }}{% endif %}{% if categoryId %}&category={{ categoryId }}{% endif %}`;
                xhr.open('GET', url, true);
                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');

                xhr.onload = function() {
                    if (xhr.status >= 200 && xhr.status < 300) {
                        const eventListContainer = document.querySelector('.grid'); // Sélectionnez le conteneur des événements
                        eventListContainer.innerHTML = xhr.responseText;
                    } else {
                        console.error('Request failed; returned status code of ' + xhr.status);
                    }
                };

                xhr.onerror = function() {
                    console.error('There was a network error.');
                };

                xhr.send();
            }
        });
    </script>
{% endblock %}
{% endblock %}